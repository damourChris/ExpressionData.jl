var documenterSearchIndex = {"docs":
[{"location":"miame/","page":"MIAME","title":"MIAME","text":"CurrentModule = ExpressionData","category":"page"},{"location":"miame/#MIAME","page":"MIAME","title":"MIAME","text":"","category":"section"},{"location":"miame/","page":"MIAME","title":"MIAME","text":"The MIAME struct provides functions for working with Minimum Information About a Microarray Experiment (MIAME) data.","category":"page"},{"location":"miame/#Constructor","page":"MIAME","title":"Constructor","text":"","category":"section"},{"location":"miame/","page":"MIAME","title":"MIAME","text":"ExpressionData.MIAME","category":"page"},{"location":"miame/#ExpressionData.MIAME","page":"MIAME","title":"ExpressionData.MIAME","text":"MIAME\n\nAn MIAME object is a container for storing metadata associated with an experiment. It follows the MIAME class from the R package from Bioconductor: Biobase.\n\nSee also\n\nabstract info hybridizations norm_controls other preprocessing pub_med_id\n\n\n\n\n\n","category":"type"},{"location":"miame/#Accessors","page":"MIAME","title":"Accessors","text":"","category":"section"},{"location":"miame/","page":"MIAME","title":"MIAME","text":"ExpressionData.abstract\nExpressionData.info\nExpressionData.hybridizations\nExpressionData.norm_controls\nExpressionData.other\nExpressionData.preprocessing\nExpressionData.pub_med_id","category":"page"},{"location":"miame/#ExpressionData.abstract","page":"MIAME","title":"ExpressionData.abstract","text":"abstract(m::MIAME)::String\n\nExtracts the abstract from an MIAME object. \n\n\n\n\n\n","category":"function"},{"location":"miame/#ExpressionData.info","page":"MIAME","title":"ExpressionData.info","text":"info(m::MIAME)::NamedTuple\n\nReturns a NamedTuple with the name, lab, contact, title, and url fields of an MIAME object.  Similar to the expinfo function in the R package from Bioconductor: Biobase.    \n\n\n\n\n\n","category":"function"},{"location":"miame/#ExpressionData.hybridizations","page":"MIAME","title":"ExpressionData.hybridizations","text":"hybridizations(m::MIAME)::Vector{String}\n\nExtracts the hybridizations from an MIAME object. \n\n\n\n\n\n","category":"function"},{"location":"miame/#ExpressionData.norm_controls","page":"MIAME","title":"ExpressionData.norm_controls","text":"norm_controls(m::MIAME)::Vector{String}\n\nExtracts the normalization controls from an MIAME object such as house keeping genes. \n\n\n\n\n\n","category":"function"},{"location":"miame/#ExpressionData.other","page":"MIAME","title":"ExpressionData.other","text":"other(m::MIAME)::Dict{Symbol,String}\n\nExtracts the other metadata from an MIAME object. This can include any additional information  that is not covered by the other fields.\n\n\n\n\n\n","category":"function"},{"location":"miame/#ExpressionData.preprocessing","page":"MIAME","title":"ExpressionData.preprocessing","text":"preprocessing(m::MIAME)::Vector{String}\n\nExtracts the preprocessing steps from an MIAME object describe the steps taken to process the raw data of the experiment.\n\n\n\n\n\n","category":"function"},{"location":"miame/#ExpressionData.pub_med_id","page":"MIAME","title":"ExpressionData.pub_med_id","text":"pub_med_id(m::MIAME)::String\n\nExtracts the pubmed id from an MIAME object. \n\n\n\n\n\n","category":"function"},{"location":"expression_set/","page":"ExpressionSet","title":"ExpressionSet","text":"CurrentModule = ExpressionData","category":"page"},{"location":"expression_set/#Expression-Sets","page":"ExpressionSet","title":"Expression Sets","text":"","category":"section"},{"location":"expression_set/","page":"ExpressionSet","title":"ExpressionSet","text":"The ExpressionSet type is a container for storing gene expression data. Following the Bioconductor ExpressionSet class, it contains a matrix of expression values, a matrix of feature data, and a matrix of sample data.","category":"page"},{"location":"expression_set/#Constructor","page":"ExpressionSet","title":"Constructor","text":"","category":"section"},{"location":"expression_set/","page":"ExpressionSet","title":"ExpressionSet","text":"ExpressionData.ExpressionSet","category":"page"},{"location":"expression_set/#ExpressionData.ExpressionSet","page":"ExpressionSet","title":"ExpressionData.ExpressionSet","text":"ExpressionSet\n\nAn ExpressionSet object is a container for storing gene expression data, along with associated metadata.  It follows the ExpressionSet class from the R package from Bioconductor: Biobase.\n\nSee also\n\nMIAME feature_names sample_names expression_values feature_data phenotype_data experiment_data annotation\n\n\n\n\n\n","category":"type"},{"location":"expression_set/#Accessors","page":"ExpressionSet","title":"Accessors","text":"","category":"section"},{"location":"expression_set/","page":"ExpressionSet","title":"ExpressionSet","text":"ExpressionData.expression_values\nExpressionData.feature_data\nExpressionData.phenotype_data\nExpressionData.experiment_data\nExpressionData.annotation\nExpressionData.sample_names\nExpressionData.feature_names","category":"page"},{"location":"expression_set/#ExpressionData.expression_values","page":"ExpressionSet","title":"ExpressionData.expression_values","text":"expression_values(eset::ExpressionSet)::DataFrame\n\nExtracts the expression values from an ExpressionSet. The feature names are included as a column.\n\nBy passing the type Matrix as the first argument, the function will return the expression values as a matrix.\n\n\n\n\n\n","category":"function"},{"location":"expression_set/#ExpressionData.feature_data","page":"ExpressionSet","title":"ExpressionData.feature_data","text":"feature_data(eset::ExpressionSet)::DataFrame\n\nExtracts the feature data from an ExpressionSet.\n\n\n\n\n\n","category":"function"},{"location":"expression_set/#ExpressionData.phenotype_data","page":"ExpressionSet","title":"ExpressionData.phenotype_data","text":"phenotype_data(eset::ExpressionSet)::DataFrame\n\nExtracts the phenotype data from an ExpressionSet.\n\n\n\n\n\n","category":"function"},{"location":"expression_set/#ExpressionData.experiment_data","page":"ExpressionSet","title":"ExpressionData.experiment_data","text":"experiment_data(eset::ExpressionSet)::MIAME\n\nExtracts the experiment data from an ExpressionSet.\n\nSee also\n\nMIAME\n\n\n\n\n\n","category":"function"},{"location":"expression_set/#ExpressionData.annotation","page":"ExpressionSet","title":"ExpressionData.annotation","text":"annotation(eset::ExpressionSet)::Symbol\n\nExtracts the annotation from an ExpressionSet.\n\n\n\n\n\n","category":"function"},{"location":"expression_set/#ExpressionData.sample_names","page":"ExpressionSet","title":"ExpressionData.sample_names","text":"sample_names(eset::ExpressionSet)::Vector{String}\n\nExtracts the sample names from an ExpressionSet.\n\n\n\n\n\n","category":"function"},{"location":"expression_set/#ExpressionData.feature_names","page":"ExpressionSet","title":"ExpressionData.feature_names","text":"feature_names(eset::ExpressionSet)::Vector{String}\n\nExtracts the feature names from an ExpressionSet.\n\n\n\n\n\n","category":"function"},{"location":"reference/","page":"Reference","title":"Reference","text":"CurrentModule = ExpressionData","category":"page"},{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [ExpressionData]","category":"page"},{"location":"reference/#ExpressionData.ExpressionSet-reference","page":"Reference","title":"ExpressionData.ExpressionSet","text":"ExpressionSet\n\nAn ExpressionSet object is a container for storing gene expression data, along with associated metadata.  It follows the ExpressionSet class from the R package from Bioconductor: Biobase.\n\nSee also\n\nMIAME feature_names sample_names expression_values feature_data phenotype_data experiment_data annotation\n\n\n\n\n\n","category":"type"},{"location":"reference/#ExpressionData.MIAME-reference","page":"Reference","title":"ExpressionData.MIAME","text":"MIAME\n\nAn MIAME object is a container for storing metadata associated with an experiment. It follows the MIAME class from the R package from Bioconductor: Biobase.\n\nSee also\n\nabstract info hybridizations norm_controls other preprocessing pub_med_id\n\n\n\n\n\n","category":"type"},{"location":"reference/#ExpressionData.abstract-Tuple{MIAME}-reference","page":"Reference","title":"ExpressionData.abstract","text":"abstract(m::MIAME)::String\n\nExtracts the abstract from an MIAME object. \n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.annotation-Tuple{ExpressionSet}-reference","page":"Reference","title":"ExpressionData.annotation","text":"annotation(eset::ExpressionSet)::Symbol\n\nExtracts the annotation from an ExpressionSet.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.experiment_data-Tuple{ExpressionSet}-reference","page":"Reference","title":"ExpressionData.experiment_data","text":"experiment_data(eset::ExpressionSet)::MIAME\n\nExtracts the experiment data from an ExpressionSet.\n\nSee also\n\nMIAME\n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.expression_values-Tuple{ExpressionSet}-reference","page":"Reference","title":"ExpressionData.expression_values","text":"expression_values(eset::ExpressionSet)::DataFrame\n\nExtracts the expression values from an ExpressionSet. The feature names are included as a column.\n\nBy passing the type Matrix as the first argument, the function will return the expression values as a matrix.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.feature_data-Tuple{ExpressionSet}-reference","page":"Reference","title":"ExpressionData.feature_data","text":"feature_data(eset::ExpressionSet)::DataFrame\n\nExtracts the feature data from an ExpressionSet.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.feature_names-Tuple{ExpressionSet}-reference","page":"Reference","title":"ExpressionData.feature_names","text":"feature_names(eset::ExpressionSet)::Vector{String}\n\nExtracts the feature names from an ExpressionSet.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.hybridizations-Tuple{MIAME}-reference","page":"Reference","title":"ExpressionData.hybridizations","text":"hybridizations(m::MIAME)::Vector{String}\n\nExtracts the hybridizations from an MIAME object. \n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.info-Tuple{MIAME}-reference","page":"Reference","title":"ExpressionData.info","text":"info(m::MIAME)::NamedTuple\n\nReturns a NamedTuple with the name, lab, contact, title, and url fields of an MIAME object.  Similar to the expinfo function in the R package from Bioconductor: Biobase.    \n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.load_eset-Tuple{AbstractString}-reference","page":"Reference","title":"ExpressionData.load_eset","text":"load_eset(file::AbstractString)::ExpressionSet\n\nLoads an ExpressionSet object from a file. The file should be in a serialized format. To save an object, use save_eset.\n\nSee also\n\nsave_eset\n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.norm_controls-Tuple{MIAME}-reference","page":"Reference","title":"ExpressionData.norm_controls","text":"norm_controls(m::MIAME)::Vector{String}\n\nExtracts the normalization controls from an MIAME object such as house keeping genes. \n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.other-Tuple{MIAME}-reference","page":"Reference","title":"ExpressionData.other","text":"other(m::MIAME)::Dict{Symbol,String}\n\nExtracts the other metadata from an MIAME object. This can include any additional information  that is not covered by the other fields.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.phenotype_data-Tuple{ExpressionSet}-reference","page":"Reference","title":"ExpressionData.phenotype_data","text":"phenotype_data(eset::ExpressionSet)::DataFrame\n\nExtracts the phenotype data from an ExpressionSet.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.preprocessing-Tuple{MIAME}-reference","page":"Reference","title":"ExpressionData.preprocessing","text":"preprocessing(m::MIAME)::Vector{String}\n\nExtracts the preprocessing steps from an MIAME object describe the steps taken to process the raw data of the experiment.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.pub_med_id-Tuple{MIAME}-reference","page":"Reference","title":"ExpressionData.pub_med_id","text":"pub_med_id(m::MIAME)::String\n\nExtracts the pubmed id from an MIAME object. \n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.sample_names-Tuple{ExpressionSet}-reference","page":"Reference","title":"ExpressionData.sample_names","text":"sample_names(eset::ExpressionSet)::Vector{String}\n\nExtracts the sample names from an ExpressionSet.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ExpressionData.save_eset-Tuple{ExpressionSet, AbstractString}-reference","page":"Reference","title":"ExpressionData.save_eset","text":"save_eset(eset::ExpressionSet, file::AbstractString)\n\nSaves an ExpressionSet object to a file. The file is saved in a serialized format. To load the object back, use load_eset.\n\nSee also\n\nload_eset\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = ExpressionData","category":"page"},{"location":"#ExpressionData","page":"Home","title":"ExpressionData","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ExpressionData.","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"io/","page":"Saving / Loading","title":"Saving / Loading","text":"CurrentModule = ExpressionData","category":"page"},{"location":"io/#Saving-and-loading-data","page":"Saving / Loading","title":"Saving and loading data","text":"","category":"section"},{"location":"io/","page":"Saving / Loading","title":"Saving / Loading","text":"The ExpressionData package provides functions for saving and loading gene expression data in various formats.","category":"page"},{"location":"io/#Saving","page":"Saving / Loading","title":"Saving","text":"","category":"section"},{"location":"io/","page":"Saving / Loading","title":"Saving / Loading","text":"The save_eset function saves gene expression data to a file in a specified format.","category":"page"},{"location":"io/","page":"Saving / Loading","title":"Saving / Loading","text":"ExpressionData.save_eset ","category":"page"},{"location":"io/#ExpressionData.save_eset","page":"Saving / Loading","title":"ExpressionData.save_eset","text":"save_eset(eset::ExpressionSet, file::AbstractString)\n\nSaves an ExpressionSet object to a file. The file is saved in a serialized format. To load the object back, use load_eset.\n\nSee also\n\nload_eset\n\n\n\n\n\n","category":"function"},{"location":"io/#Loading","page":"Saving / Loading","title":"Loading","text":"","category":"section"},{"location":"io/","page":"Saving / Loading","title":"Saving / Loading","text":"The load_eset function loads gene expression data from a file in a specified format.","category":"page"},{"location":"io/","page":"Saving / Loading","title":"Saving / Loading","text":"\nExpressionData.load_eset","category":"page"},{"location":"io/#ExpressionData.load_eset","page":"Saving / Loading","title":"ExpressionData.load_eset","text":"load_eset(file::AbstractString)::ExpressionSet\n\nLoads an ExpressionSet object from a file. The file should be in a serialized format. To save an object, use save_eset.\n\nSee also\n\nsave_eset\n\n\n\n\n\n","category":"function"}]
}
